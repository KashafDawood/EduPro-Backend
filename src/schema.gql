# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  name: String!
  email: String!
  password: String!
  phone: String
  role: String!
  active: Boolean!
  photo: String
  refreshToken: String
  passwordChangedAt: DateTime
  passwordResetExpire: DateTime
  passwordResetToken: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResponse {
  accessToken: String
  refreshToken: String
}

type RefreshAccessTokenResponse {
  accessToken: String
}

type Class {
  _id: ID!
  name: String!
  section: String!
}

type Subject {
  _id: ID!
  name: String!
  marks: Float
  totalMarks: Float
  percentage: Float
}

type Student {
  _id: ID!
  studentName: String!
  studentCNIC: String!
  gender: String!
  Subject: [ID!]!
  subjectData: [Subject]
  Class: ID!
  classData: [Class]
  dateOfBirth: DateTime!
  dateOfAdmission: DateTime!
  address: String!
  studentRollNumber: String
  religious: String
  numberOfSiblings: Float
  admissionFee: Float
  monthlyFee: Float
  photo: String
  active: Boolean!
  guardianName: String!
  guardianRelation: String!
  guardianPhone: String!
  guardianCNIC: String!
  guardianProfession: String
  guardianProfessionType: String
  guardianMonthlyIncome: Float
}

type Employee {
  _id: ID!
  name: String!
  phone: String
  guardianPhone: String
  active: Boolean!
  photo: String
  address: String
  guardianName: String!
  guardianRelation: String!
  CNIC: String!
  guardianCNIC: String!
  dateOfBirth: DateTime
  dateOfJoining: DateTime
  qualification: String!
  salary: Float
  role: String!
}

type Teacher {
  _id: ID!
  name: String!
  phone: String
  guardianPhone: String
  active: Boolean!
  photo: String
  address: String
  guardianName: String!
  guardianRelation: String!
  CNIC: String!
  guardianCNIC: String!
  dateOfBirth: DateTime
  dateOfJoining: DateTime
  qualification: String!
  salary: Float
  role: String!
  Subject: [ID!]!
  subjectData: [Subject]
  Class: [ID!]!
  classData: [Class]
}

type Expense {
  _id: ID!
  month: Float!
  year: Float!
  salaries: Float!
  buildingExpense: Float!
  bills: Float!
  miscellaneousExpense: Float!
  createdAt: DateTime!
}

type Query {
  users: [User!]!
  userByEmail(email: String!): User
  userById(id: String!): User!
  findAllStudent: [Student!]!
  findStudentById(studentId: String!): Student!
  findAllTeachers: [Teacher!]!
  findTeacherById(teacherId: String!): Teacher!
  findAllSubject: [Subject!]!
  findSubjectById(id: String!): Subject!
  findAllClasses: [Class!]!
  findClassById(id: String!): Class!
  findAllStaffs: [Employee!]!
  findStaffById(staffId: String!): Employee!
  findAllExpenses: [Expense!]!
  findExpenseById(expenseId: String!): Expense!
}

type Mutation {
  DeleteMe(id: String!): User!
  updateMe(id: ID!, updateUserInput: UpdateUserInput!): User!
  signIn(signInInput: SignInInput!): AuthResponse!
  refreshAccessToken(id: String!, refreshToken: String!): RefreshAccessTokenResponse!
  signUp(signUpInput: SignUpInput!): User!
  updatePassword(updatePasswordInput: UpdatePasswordInput!): User!
  forgetPassword(forgetPasswordInput: ForgetPasswordInput!): User!
  createStudent(createStudentInput: CreateStudentInput!): Student!
  deleteStudent(studentId: String!): Student!
  updateStudent(studentId: String!, updateStudentInput: UpdateStudentInput!): Student!
  createTeacher(createTeacherInput: CreateTeacherInput!): Teacher!
  deleteTeacher(teacherId: String!): Teacher!
  updateTeacher(teacherId: String!, updateTeacherInput: UpdateTeacherInput!): Teacher!
  createSubject(createSubjectInput: CreateSubjectInput!): Subject!
  deleteSubject(id: String!): Subject!
  updateSubject(id: String!, updateSubjectInput: UpdateSubjectInput!): Subject!
  createClass(createClassInput: CreateClassInput!): Class!
  updateClass(id: String!, updateClassInput: UpdateClassInput!): Class!
  deleteClass(id: String!): Class!
  createStaff(createStaffInput: CreateStaffInput!): Employee!
  deleteStaff(staffId: String!): Employee!
  updateStaff(staffId: String!, updateStaffInput: UpdateStaffInput!): Employee!
  createExpense(createExpenseInput: CreateExpenseInput!): Expense!
  deleteExpense(expenseId: String!): Expense!
  updateExpense(expenseId: String!, updateExpenseInput: UpdateExpenseInput!): Expense!
}

input UpdateUserInput {
  name: String
  email: String
  phone: String
  photo: String
  password: String
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  name: String!
  email: String!
  password: String!
}

input UpdatePasswordInput {
  userPassword: String!
  newPassword: String!
}

input ForgetPasswordInput {
  email: String!
}

input CreateStudentInput {
  studentName: String!
  studentCNIC: String!
  gender: String!
  Class: ID!
  Subject: [ID!]!
  dateOfBirth: DateTime!
  dateOfAdmission: DateTime
  address: String!
  studentRollNumber: String
  religious: String
  numberOfSiblings: Float
  admissionFee: Float
  monthlyFee: Float
  photo: String
  guardianName: String!
  guardianRelation: String!
  guardianPhone: String!
  guardianCNIC: String!
  guardianProfession: String
  guardianProfessionType: String
  guardianMonthlyIncome: Float
}

input UpdateStudentInput {
  studentName: String
  studentCNIC: String
  gender: String
  Class: ID
  Subject: [ID!]
  dateOfBirth: DateTime
  dateOfAdmission: DateTime
  address: String
  studentRollNumber: String
  religious: String
  numberOfSiblings: Float
  admissionFee: Float
  monthlyFee: Float
  photo: String
  guardianName: String
  guardianRelation: String
  guardianPhone: String
  guardianCNIC: String
  guardianProfession: String
  guardianProfessionType: String
  guardianMonthlyIncome: Float
}

input CreateTeacherInput {
  name: String!
  CNIC: String!
  gender: String!
  Class: [ID!]!
  Subject: [ID!]!
  dateOfBirth: DateTime
  dateOfJoining: DateTime
  address: String!
  photo: String
  guardianName: String!
  guardianRelation: String!
  guardianPhone: String!
  guardianCNIC: String!
  qualification: String
  salary: Float
}

input UpdateTeacherInput {
  name: String
  phone: String
  guardianPhone: String
  photo: String
  address: String
  guardianName: String
  guardianRelation: String
  CNIC: String
  guardianCNIC: String
  Class: [ID!]
  Subject: [ID!]
  dateOfBirth: DateTime
  dateOfJoining: DateTime
  qualification: String
  salary: Float
}

input CreateSubjectInput {
  name: String!
  marks: Float
  totalMarks: Float
  percentage: Float
}

input UpdateSubjectInput {
  name: String
  marks: Float
  totalMarks: Float
  percentage: Float
}

input CreateClassInput {
  name: String!
  section: String!
}

input UpdateClassInput {
  name: String
  section: String
}

input CreateStaffInput {
  name: String!
  CNIC: String!
  role: String!
  gender: String!
  dateOfBirth: DateTime
  dateOfJoining: DateTime
  address: String!
  photo: String
  guardianName: String!
  guardianRelation: String!
  guardianPhone: String!
  guardianCNIC: String!
  qualification: String
  salary: Float
}

input UpdateStaffInput {
  name: String
  phone: String
  guardianPhone: String
  photo: String
  address: String
  role: String
  guardianName: String
  guardianRelation: String
  CNIC: String
  guardianCNIC: String
  dateOfBirth: DateTime
  dateOfJoining: DateTime
  qualification: String
  salary: Float
}

input CreateExpenseInput {
  month: Int!
  year: Int!
  salaries: Int! = 0
  buildingExpense: Int! = 0
  bills: Int! = 0
  miscellaneousExpense: Int! = 0
}

input UpdateExpenseInput {
  month: Float
  year: Float
  salaries: Float
  buildingExpense: Float
  bills: Float
  miscellaneousExpense: Float
}